s/insted/instead/<br>
s/maintaing/maintaining/<br>
<br>
Signed-off-by: Thomas Tai <thomas.tai@xxxxxxxxxx><br>
---<br>
 arch/sparc/vdso/vdso2c.c             | 2 +-<br>
 arch/x86/entry/vdso/vdso2c.c         | 2 +-<br>
 arch/x86/kernel/cpu/intel.c          | 2 +-<br>
 tools/perf/arch/x86/util/perf_regs.c | 4 ++--<br>
 4 files changed, 5 insertions(+), 5 deletions(-)<br>
<br>
diff --git a/arch/sparc/vdso/vdso2c.c b/arch/sparc/vdso/vdso2c.c<br>
index ab75041..70df9a8 100644<br>
--- a/arch/sparc/vdso/vdso2c.c<br>
+++ b/arch/sparc/vdso/vdso2c.c<br>
@@ -192,7 +192,7 @@ int main(int argc, char **argv)<br>
 <br>
 	/*<br>
 	 * Figure out the struct name.  If we're writing to a .so file,<br>
-	 * generate raw output insted.<br>
+	 * generate raw output instead.<br>
 	 */<br>
 	name = strdup(argv[3]);<br>
 	namelen = strlen(name);<br>
diff --git a/arch/x86/entry/vdso/vdso2c.c b/arch/x86/entry/vdso/vdso2c.c<br>
index 2d0f3d8..edfe978 100644<br>
--- a/arch/x86/entry/vdso/vdso2c.c<br>
+++ b/arch/x86/entry/vdso/vdso2c.c<br>
@@ -218,7 +218,7 @@ int main(int argc, char **argv)<br>
 <br>
 	/*<br>
 	 * Figure out the struct name.  If we're writing to a .so file,<br>
-	 * generate raw output insted.<br>
+	 * generate raw output instead.<br>
 	 */<br>
 	name = strdup(argv[3]);<br>
 	namelen = strlen(name);<br>
diff --git a/arch/x86/kernel/cpu/intel.c b/arch/x86/kernel/cpu/intel.c<br>
index 0e422a5..63e381a 100644<br>
--- a/arch/x86/kernel/cpu/intel.c<br>
+++ b/arch/x86/kernel/cpu/intel.c<br>
@@ -301,7 +301,7 @@ static void early_init_intel(struct cpuinfo_x86 *c)<br>
 	 *  The operating system must reload CR3 to cause the TLB to be flushed"<br>
 	 *<br>
 	 * As a result, boot_cpu_has(X86_FEATURE_PGE) in arch/x86/include/asm/tlbflush.h<br>
-	 * should be false so that __flush_tlb_all() causes CR3 insted of CR4.PGE<br>
+	 * should be false so that __flush_tlb_all() causes CR3 instead of CR4.PGE<br>
 	 * to be modified.<br>
 	 */<br>
 	if (c->x86 == 5 && c->x86_model == 9) {<br>
diff --git a/tools/perf/arch/x86/util/perf_regs.c b/tools/perf/arch/x86/util/perf_regs.c<br>
index fca81b3..207c568 100644<br>
--- a/tools/perf/arch/x86/util/perf_regs.c<br>
+++ b/tools/perf/arch/x86/util/perf_regs.c<br>
@@ -165,7 +165,7 @@ static int sdt_init_op_regex(void)<br>
 /*<br>
  * Max x86 register name length is 5(ex: %r15d). So, 6th char<br>
  * should always contain NULL. This helps to find register name<br>
- * length using strlen, insted of maintaing one more variable.<br>
+ * length using strlen, instead of maintaining one more variable.<br>
  */<br>
 #define SDT_REG_NAME_SIZE  6<br>
 <br>
@@ -207,7 +207,7 @@ int arch_sdt_arg_parse_op(char *old_op, char **new_op)<br>
 	 * and displacement 0 (Both sign and displacement 0 are<br>
 	 * optional so it may be empty). Use one more character<br>
 	 * to hold last NULL so that strlen can be used to find<br>
-	 * prefix length, instead of maintaing one more variable.<br>
+	 * prefix length, instead of maintaining one more variable.<br>
 	 */<br>
 	char prefix[3] = {0};<br>
 <br>
-- <br>
1.8.3.1<br>
<br>
<br>

