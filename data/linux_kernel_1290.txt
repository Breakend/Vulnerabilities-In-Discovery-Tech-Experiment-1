From: James Morse <james.morse@xxxxxxx><br>
<br>
kexec does dcache maintenance when it re-writes all memory. Our<br>
dcache_by_line_op macro depends on reading the sanitised DminLine<br>
from memory. Kexec may have overwritten this, so open-codes the<br>
sequence.<br>
<br>
dcache_by_line_op is a whole set of macros, it uses dcache_line_size<br>
which uses read_ctr for the sanitsed DminLine. Reading the DminLine<br>
is the first thing the dcache_by_line_op does.<br>
<br>
Rename dcache_by_line_op dcache_by_myline_op and take DminLine as<br>
an argument. Kexec can now use the slightly smaller macro.<br>
<br>
This makes up-coming changes to the dcache maintenance easier on<br>
the eye.<br>
<br>
Code generated by the existing callers is unchanged.<br>
<br>
Signed-off-by: James Morse <james.morse@xxxxxxx><br>
<br>
[Fixed merging issues]<br>
<br>
Signed-off-by: Pavel Tatashin <pasha.tatashin@xxxxxxxxxx><br>
---<br>
 arch/arm64/include/asm/assembler.h  | 12 ++++++++----<br>
 arch/arm64/kernel/relocate_kernel.S | 13 +++----------<br>
 2 files changed, 11 insertions(+), 14 deletions(-)<br>
<br>
diff --git a/arch/arm64/include/asm/assembler.h b/arch/arm64/include/asm/assembler.h<br>
index ca31594d3d6c..29061b76aab6 100644<br>
--- a/arch/arm64/include/asm/assembler.h<br>
+++ b/arch/arm64/include/asm/assembler.h<br>
@@ -371,10 +371,9 @@ alternative_else<br>
 alternative_endif<br>
 	.endm<br>
 <br>
-	.macro dcache_by_line_op op, domain, kaddr, size, tmp1, tmp2<br>
-	dcache_line_size \tmp1, \tmp2<br>
+	.macro dcache_by_myline_op op, domain, kaddr, size, linesz, tmp2<br>
 	add	\size, \kaddr, \size<br>
-	sub	\tmp2, \tmp1, #1<br>
+	sub	\tmp2, \linesz, #1<br>
 	bic	\kaddr, \kaddr, \tmp2<br>
 9998:<br>
 	.ifc	\op, cvau<br>
@@ -394,12 +393,17 @@ alternative_endif<br>
 	.endif<br>
 	.endif<br>
 	.endif<br>
-	add	\kaddr, \kaddr, \tmp1<br>
+	add	\kaddr, \kaddr, \linesz<br>
 	cmp	\kaddr, \size<br>
 	b.lo	9998b<br>
 	dsb	\domain<br>
 	.endm<br>
 <br>
+	.macro dcache_by_line_op op, domain, kaddr, size, tmp1, tmp2<br>
+	dcache_line_size \tmp1, \tmp2<br>
+	dcache_by_myline_op \op, \domain, \kaddr, \size, \tmp1, \tmp2<br>
+	.endm<br>
+<br>
 /*<br>
  * Macro to perform an instruction cache maintenance for the interval<br>
  * [start, end)<br>
diff --git a/arch/arm64/kernel/relocate_kernel.S b/arch/arm64/kernel/relocate_kernel.S<br>
index 8058fabe0a76..718037bef560 100644<br>
--- a/arch/arm64/kernel/relocate_kernel.S<br>
+++ b/arch/arm64/kernel/relocate_kernel.S<br>
@@ -41,16 +41,9 @@ SYM_CODE_START(arm64_relocate_new_kernel)<br>
 	tbz	x16, IND_SOURCE_BIT, .Ltest_indirection<br>
 <br>
 	/* Invalidate dest page to PoC. */<br>
-	mov     x2, x13<br>
-	add     x20, x2, #PAGE_SIZE<br>
-	sub     x1, x15, #1<br>
-	bic     x2, x2, x1<br>
-2:	dc      ivac, x2<br>
-	add     x2, x2, x15<br>
-	cmp     x2, x20<br>
-	b.lo    2b<br>
-	dsb     sy<br>
-<br>
+	mov	x2, x13<br>
+	mov	x1, #PAGE_SIZE<br>
+	dcache_by_myline_op ivac, sy, x2, x1, x15, x20<br>
 	copy_page x13, x12, x1, x2, x3, x4, x5, x6, x7, x8<br>
 	b	.Lnext<br>
 .Ltest_indirection:<br>
-- <br>
2.25.1<br>
<br>
<br>

