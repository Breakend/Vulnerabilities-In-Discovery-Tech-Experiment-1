On Wed, Apr 07, 2021 at 01:07:18PM -0700, Badhri Jagan Sridharan wrote:<br>
><i> tcpm_pd_build_request overwrites current_limit and supply_voltage</i><br>
><i> even before port partner accepts the requests. This leaves stale</i><br>
><i> values in current_limit and supply_voltage that get exported by</i><br>
><i> "tcpm-source-psy-". Solving this problem by caching the request</i><br>
><i> values of current limit/supply voltage in req_current_limit</i><br>
><i> and req_supply_voltage. current_limit/supply_voltage gets updated</i><br>
><i> once the port partner accepts the request.</i><br>
><i> </i><br>
><i> Fixes: f2a8aa053c176 ("typec: tcpm: Represent source supply through power_supply")</i><br>
><i> Signed-off-by: Badhri Jagan Sridharan <badhri@xxxxxxxxxx></i><br>
><i> Reviewed-by: Guenter Roeck <linux@xxxxxxxxxxxx></i><br>
><i> Reviewed-by: Adam Thomson <Adam.Thomson.Opensource@xxxxxxxxxxx></i><br>
<br>
Reviewed-by: Heikki Krogerus <heikki.krogerus@xxxxxxxxxxxxxxx><br>
<br>
><i> ---</i><br>
><i> Changes since V1:</i><br>
><i> * Fixed typo as suggested by Guenter Roeck.</i><br>
><i> * Added Reviewed-by tags.</i><br>
><i> ---</i><br>
><i>  drivers/usb/typec/tcpm/tcpm.c | 17 ++++++++++-------</i><br>
><i>  1 file changed, 10 insertions(+), 7 deletions(-)</i><br>
><i> </i><br>
><i> diff --git a/drivers/usb/typec/tcpm/tcpm.c b/drivers/usb/typec/tcpm/tcpm.c</i><br>
><i> index ca1fc77697fc..4ea4b30ae885 100644</i><br>
><i> --- a/drivers/usb/typec/tcpm/tcpm.c</i><br>
><i> +++ b/drivers/usb/typec/tcpm/tcpm.c</i><br>
><i> @@ -389,7 +389,10 @@ struct tcpm_port {</i><br>
><i>  	unsigned int operating_snk_mw;</i><br>
><i>  	bool update_sink_caps;</i><br>
><i>  </i><br>
><i> -	/* Requested current / voltage */</i><br>
><i> +	/* Requested current / voltage to the port partner */</i><br>
><i> +	u32 req_current_limit;</i><br>
><i> +	u32 req_supply_voltage;</i><br>
><i> +	/* Actual current / voltage limit of the local port */</i><br>
><i>  	u32 current_limit;</i><br>
><i>  	u32 supply_voltage;</i><br>
><i>  </i><br>
><i> @@ -2435,8 +2438,8 @@ static void tcpm_pd_ctrl_request(struct tcpm_port *port,</i><br>
><i>  		case SNK_TRANSITION_SINK:</i><br>
><i>  			if (port->vbus_present) {</i><br>
><i>  				tcpm_set_current_limit(port,</i><br>
><i> -						       port->current_limit,</i><br>
><i> -						       port->supply_voltage);</i><br>
><i> +						       port->req_current_limit,</i><br>
><i> +						       port->req_supply_voltage);</i><br>
><i>  				port->explicit_contract = true;</i><br>
><i>  				tcpm_set_auto_vbus_discharge_threshold(port,</i><br>
><i>  								       TYPEC_PWR_MODE_PD,</i><br>
><i> @@ -2545,8 +2548,8 @@ static void tcpm_pd_ctrl_request(struct tcpm_port *port,</i><br>
><i>  			break;</i><br>
><i>  		case SNK_NEGOTIATE_PPS_CAPABILITIES:</i><br>
><i>  			port->pps_data.active = true;</i><br>
><i> -			port->supply_voltage = port->pps_data.out_volt;</i><br>
><i> -			port->current_limit = port->pps_data.op_curr;</i><br>
><i> +			port->req_supply_voltage = port->pps_data.out_volt;</i><br>
><i> +			port->req_current_limit = port->pps_data.op_curr;</i><br>
><i>  			tcpm_set_state(port, SNK_TRANSITION_SINK, 0);</i><br>
><i>  			break;</i><br>
><i>  		case SOFT_RESET_SEND:</i><br>
><i> @@ -3195,8 +3198,8 @@ static int tcpm_pd_build_request(struct tcpm_port *port, u32 *rdo)</i><br>
><i>  			 flags & RDO_CAP_MISMATCH ? " [mismatch]" : "");</i><br>
><i>  	}</i><br>
><i>  </i><br>
><i> -	port->current_limit = ma;</i><br>
><i> -	port->supply_voltage = mv;</i><br>
><i> +	port->req_current_limit = ma;</i><br>
><i> +	port->req_supply_voltage = mv;</i><br>
><i>  </i><br>
><i>  	return 0;</i><br>
><i>  }</i><br>
><i> -- </i><br>
><i> 2.31.1.295.g9ea45b61b8-goog</i><br>
<br>
-- <br>
heikki<br>
<br>
<br>

