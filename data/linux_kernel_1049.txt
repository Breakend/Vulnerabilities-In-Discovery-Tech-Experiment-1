Smatch is warning that:<br>
	drivers/media/platform/qcom/venus/hfi_venus.c:1100 venus_isr() warn: variable dereferenced before check 'hdev' (see line 1097)<br>
<br>
The logic basically does:<br>
	hdev = to_hfi_priv(core);<br>
<br>
with is translated to:<br>
	hdev = core->priv;<br>
<br>
If the IRQ code can receive a NULL pointer for hdev, there's<br>
a bug there, as it will first try to de-reference the pointer,<br>
and then check if it is null.<br>
<br>
After looking at the code, it seems that this indeed can happen:<br>
Basically, the venus IRQ thread is started with:<br>
	devm_request_threaded_irq()<br>
So, it will only be freed after the driver unbinds.<br>
<br>
In order to prevent the IRQ code to work with freed data,<br>
the logic at venus_hfi_destroy() sets core->priv to NULL,<br>
which would make the IRQ code to ignore any pending IRQs.<br>
<br>
There is, however a race condition, as core->priv is set<br>
to NULL only after being freed. So, we need also to move the<br>
core->priv = NULL to happen earlier.<br>
<br>
Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@xxxxxxxxxx><br>
---<br>
 drivers/media/platform/qcom/venus/hfi_venus.c | 9 ++++++---<br>
 1 file changed, 6 insertions(+), 3 deletions(-)<br>
<br>
diff --git a/drivers/media/platform/qcom/venus/hfi_venus.c b/drivers/media/platform/qcom/venus/hfi_venus.c<br>
index cebb20cf371f..ce98c523b3c6 100644<br>
--- a/drivers/media/platform/qcom/venus/hfi_venus.c<br>
+++ b/drivers/media/platform/qcom/venus/hfi_venus.c<br>
@@ -1094,12 +1094,15 @@ static irqreturn_t venus_isr(struct venus_core *core)<br>
 {<br>
 	struct venus_hfi_device *hdev = to_hfi_priv(core);<br>
 	u32 status;<br>
-	void __iomem *cpu_cs_base = hdev->core->cpu_cs_base;<br>
-	void __iomem *wrapper_base = hdev->core->wrapper_base;<br>
+	void __iomem *cpu_cs_base;<br>
+	void __iomem *wrapper_base;<br>
 <br>
 	if (!hdev)<br>
 		return IRQ_NONE;<br>
 <br>
+	cpu_cs_base = hdev->core->cpu_cs_base;<br>
+	wrapper_base = hdev->core->wrapper_base;<br>
+<br>
 	status = readl(wrapper_base + WRAPPER_INTR_STATUS);<br>
 	if (IS_V6(core)) {<br>
 		if (status & WRAPPER_INTR_STATUS_A2H_MASK ||<br>
@@ -1650,10 +1653,10 @@ void venus_hfi_destroy(struct venus_core *core)<br>
 {<br>
 	struct venus_hfi_device *hdev = to_hfi_priv(core);<br>
 <br>
+	core->priv = NULL;<br>
 	venus_interface_queues_release(hdev);<br>
 	mutex_destroy(&hdev->lock);<br>
 	kfree(hdev);<br>
-	core->priv = NULL;<br>
 	core->ops = NULL;<br>
 }<br>
 <br>
-- <br>
2.30.2<br>
<br>
<br>

