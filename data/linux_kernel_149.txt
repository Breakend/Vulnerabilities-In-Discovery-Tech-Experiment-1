Add PCI P2PDMA support for dma_direct_map_sg() so that it can map<br>
PCI P2PDMA pages directly without a hack in the callers. This allows<br>
for heterogeneous SGLs that contain both P2PDMA and regular pages.<br>
<br>
SGL segments that contain PCI bus addresses are marked with<br>
sg_mark_pci_p2pdma() and are ignored when unmapped.<br>
<br>
Signed-off-by: Logan Gunthorpe <logang@xxxxxxxxxxxx><br>
---<br>
 kernel/dma/direct.c | 25 ++++++++++++++++++++++---<br>
 1 file changed, 22 insertions(+), 3 deletions(-)<br>
<br>
diff --git a/kernel/dma/direct.c b/kernel/dma/direct.c<br>
index 002268262c9a..108dfb4ecbd5 100644<br>
--- a/kernel/dma/direct.c<br>
+++ b/kernel/dma/direct.c<br>
@@ -13,6 +13,7 @@<br>
 #include <linux/vmalloc.h><br>
 #include <linux/set_memory.h><br>
 #include <linux/slab.h><br>
+#include <linux/pci-p2pdma.h><br>
 #include "direct.h"<br>
 <br>
 /*<br>
@@ -387,19 +388,37 @@ void dma_direct_unmap_sg(struct device *dev, struct scatterlist *sgl,<br>
 	struct scatterlist *sg;<br>
 	int i;<br>
 <br>
-	for_each_sg(sgl, sg, nents, i)<br>
+	for_each_sg(sgl, sg, nents, i) {<br>
+		if (sg_is_pci_p2pdma(sg)) {<br>
+			sg_unmark_pci_p2pdma(sg);<br>
+			continue;<br>
+		}<br>
+<br>
 		dma_direct_unmap_page(dev, sg->dma_address, sg_dma_len(sg), dir,<br>
 			     attrs);<br>
+	}<br>
 }<br>
 #endif<br>
 <br>
 int dma_direct_map_sg(struct device *dev, struct scatterlist *sgl, int nents,<br>
 		enum dma_data_direction dir, unsigned long attrs)<br>
 {<br>
-	int i;<br>
+	struct pci_p2pdma_map_state p2pdma_state = {};<br>
 	struct scatterlist *sg;<br>
+	int i, ret = 0;<br>
 <br>
 	for_each_sg(sgl, sg, nents, i) {<br>
+		if (is_pci_p2pdma_page(sg_page(sg))) {<br>
+			ret = pci_p2pdma_map_segment(&p2pdma_state, dev, sg,<br>
+						     attrs);<br>
+			if (ret < 0) {<br>
+				goto out_unmap;<br>
+			} else if (ret) {<br>
+				ret = 0;<br>
+				continue;<br>
+			}<br>
+		}<br>
+<br>
 		sg->dma_address = dma_direct_map_page(dev, sg_page(sg),<br>
 				sg->offset, sg->length, dir, attrs);<br>
 		if (sg->dma_address == DMA_MAPPING_ERROR)<br>
@@ -411,7 +430,7 @@ int dma_direct_map_sg(struct device *dev, struct scatterlist *sgl, int nents,<br>
 <br>
 out_unmap:<br>
 	dma_direct_unmap_sg(dev, sgl, i, dir, attrs | DMA_ATTR_SKIP_CPU_SYNC);<br>
-	return 0;<br>
+	return ret;<br>
 }<br>
 <br>
 dma_addr_t dma_direct_map_resource(struct device *dev, phys_addr_t paddr,<br>
-- <br>
2.20.1<br>
<br>
<br>

