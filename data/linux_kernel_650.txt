<br>
<br>
><i> On Apr 8, 2021, at 4:47 AM, Jiri Olsa <jolsa@xxxxxxxxxx> wrote:</i><br>
><i> </i><br>
><i> On Tue, Apr 06, 2021 at 05:36:01PM -0700, Song Liu wrote:</i><br>
><i>> Currently, to use BPF to aggregate perf event counters, the user uses</i><br>
><i>> --bpf-counters option. Enable "use bpf by default" events with a config</i><br>
><i>> option, stat.bpf-counter-events. This is limited to hardware events in</i><br>
><i>> evsel__hw_names.</i><br>
><i>> </i><br>
><i>> This also enables mixed BPF event and regular event in the same sesssion.</i><br>
><i>> For example:</i><br>
><i>> </i><br>
><i>>   perf config stat.bpf-counter-events=instructions</i><br>
><i>>   perf stat -e instructions,cs</i><br>
><i>> </i><br>
><i> </i><br>
><i> so if we are mixing events now, how about uing modifier for bpf counters,</i><br>
><i> instead of configuring .perfconfig list we could use:</i><br>
><i> </i><br>
><i>  perf stat -e instructions:b,cs</i><br>
><i> </i><br>
><i> thoughts?</i><br>
><i> </i><br>
><i> the change below adds 'b' modifier and sets 'evsel::bpf_counter',</i><br>
><i> feel free to use it</i><br>
<br>
I think we will need both 'b' modifier and .perfconfig configuration. <br>
For systems with BPF-managed perf events running in the background, <br>
.perfconfig makes sure perf-stat sessions will share PMCs with these <br>
background monitoring tools. 'b' modifier, on the other hand, is useful<br>
when the user knows there is opportunity to share the PMCs. <br>
<br>
Does this make sense? <br>
<br>
Thanks,<br>
Song<br>
<br>
><i> </i><br>
><i> jirka</i><br>
><i> </i><br>
><i> </i><br>
><i> ---</i><br>
><i> diff --git a/tools/perf/util/evsel.h b/tools/perf/util/evsel.h</i><br>
><i> index ca52581f1b17..c55e4e58d1dc 100644</i><br>
><i> --- a/tools/perf/util/evsel.h</i><br>
><i> +++ b/tools/perf/util/evsel.h</i><br>
><i> @@ -82,6 +82,7 @@ struct evsel {</i><br>
><i> 		bool			auto_merge_stats;</i><br>
><i> 		bool			collect_stat;</i><br>
><i> 		bool			weak_group;</i><br>
><i> +		bool			bpf_counter;</i><br>
><i> 		int			bpf_fd;</i><br>
><i> 		struct bpf_object	*bpf_obj;</i><br>
><i> 	};</i><br>
><i> diff --git a/tools/perf/util/parse-events.c b/tools/perf/util/parse-events.c</i><br>
><i> index 9ecb45bea948..b5850f1ea90b 100644</i><br>
><i> --- a/tools/perf/util/parse-events.c</i><br>
><i> +++ b/tools/perf/util/parse-events.c</i><br>
><i> @@ -1801,6 +1801,7 @@ struct event_modifier {</i><br>
><i> 	int pinned;</i><br>
><i> 	int weak;</i><br>
><i> 	int exclusive;</i><br>
><i> +	int bpf_counter;</i><br>
><i> };</i><br>
><i> </i><br>
><i> static int get_event_modifier(struct event_modifier *mod, char *str,</i><br>
><i> @@ -1821,6 +1822,7 @@ static int get_event_modifier(struct event_modifier *mod, char *str,</i><br>
><i> 	int exclude = eu | ek | eh;</i><br>
><i> 	int exclude_GH = evsel ? evsel->exclude_GH : 0;</i><br>
><i> 	int weak = 0;</i><br>
><i> +	int bpf_counter = 0;</i><br>
><i> </i><br>
><i> 	memset(mod, 0, sizeof(*mod));</i><br>
><i> </i><br>
><i> @@ -1864,6 +1866,8 @@ static int get_event_modifier(struct event_modifier *mod, char *str,</i><br>
><i> 			exclusive = 1;</i><br>
><i> 		} else if (*str == 'W') {</i><br>
><i> 			weak = 1;</i><br>
><i> +		} else if (*str == 'b') {</i><br>
><i> +			bpf_counter = 1;</i><br>
><i> 		} else</i><br>
><i> 			break;</i><br>
><i> </i><br>
><i> @@ -1895,6 +1899,7 @@ static int get_event_modifier(struct event_modifier *mod, char *str,</i><br>
><i> 	mod->sample_read = sample_read;</i><br>
><i> 	mod->pinned = pinned;</i><br>
><i> 	mod->weak = weak;</i><br>
><i> +	mod->bpf_counter = bpf_counter;</i><br>
><i> 	mod->exclusive = exclusive;</i><br>
><i> </i><br>
><i> 	return 0;</i><br>
><i> @@ -1909,7 +1914,7 @@ static int check_modifier(char *str)</i><br>
><i> 	char *p = str;</i><br>
><i> </i><br>
><i> 	/* The sizeof includes 0 byte as well. */</i><br>
><i> -	if (strlen(str) > (sizeof("ukhGHpppPSDIWe") - 1))</i><br>
><i> +	if (strlen(str) > (sizeof("ukhGHpppPSDIWeb") - 1))</i><br>
><i> 		return -1;</i><br>
><i> </i><br>
><i> 	while (*p) {</i><br>
><i> @@ -1950,6 +1955,7 @@ int parse_events__modifier_event(struct list_head *list, char *str, bool add)</i><br>
><i> 		evsel->sample_read         = mod.sample_read;</i><br>
><i> 		evsel->precise_max         = mod.precise_max;</i><br>
><i> 		evsel->weak_group	   = mod.weak;</i><br>
><i> +		evsel->bpf_counter         = mod.bpf_counter;</i><br>
><i> </i><br>
><i> 		if (evsel__is_group_leader(evsel)) {</i><br>
><i> 			evsel->core.attr.pinned = mod.pinned;</i><br>
><i> diff --git a/tools/perf/util/parse-events.l b/tools/perf/util/parse-events.l</i><br>
><i> index 0b36285a9435..fb8646cc3e83 100644</i><br>
><i> --- a/tools/perf/util/parse-events.l</i><br>
><i> +++ b/tools/perf/util/parse-events.l</i><br>
><i> @@ -210,7 +210,7 @@ name_tag	[\'][a-zA-Z_*?\[\]][a-zA-Z0-9_*?\-,\.\[\]:=]*[\']</i><br>
><i> name_minus	[a-zA-Z_*?][a-zA-Z0-9\-_*?.:]*</i><br>
><i> drv_cfg_term	[a-zA-Z0-9_\.]+(=[a-zA-Z0-9_*?\.:]+)?</i><br>
><i> /* If you add a modifier you need to update check_modifier() */</i><br>
><i> -modifier_event	[ukhpPGHSDIWe]+</i><br>
><i> +modifier_event	[ukhpPGHSDIWeb]+</i><br>
><i> modifier_bp	[rwx]{1,3}</i><br>
><i> </i><br>
><i> %%</i><br>
><i> </i><br>
<br>
<br>

