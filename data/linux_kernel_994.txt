On Wed, Apr 07, 2021 at 05:15:40PM +0800, Zhen Lei wrote:<br>
><i> Fixes the following W=1 kernel build warning:</i><br>
><i> </i><br>
><i> drivers/usb/typec/tcpm/tcpm.c:2107:39: warning: ‘tcpm_altmode_ops’ defined but not used [-Wunused-const-variable=]</i><br>
><i> </i><br>
><i> The reference to the variable 'tcpm_altmode_ops' is deleted by the</i><br>
><i> commit a079973f462a ("usb: typec: tcpm: Remove tcpc_config configuration</i><br>
><i> mechanism").</i><br>
><i> </i><br>
><i> By the way, the static functions referenced only by the variable</i><br>
><i> 'tcpm_altmode_ops' are deleted accordingly.</i><br>
><i> </i><br>
><i> Reported-by: Hulk Robot <hulkci@xxxxxxxxxx></i><br>
><i> Signed-off-by: Zhen Lei <thunder.leizhen@xxxxxxxxxx></i><br>
<br>
Oh, I thought this was already fixed. Should this go into the stable<br>
trees as well?<br>
<br>
Acked-by: Heikki Krogerus <heikki.krogerus@xxxxxxxxxxxxxxx><br>
<br>
><i> ---</i><br>
><i>  drivers/usb/typec/tcpm/tcpm.c | 60 -------------------------------------------</i><br>
><i>  1 file changed, 60 deletions(-)</i><br>
><i> </i><br>
><i> diff --git a/drivers/usb/typec/tcpm/tcpm.c b/drivers/usb/typec/tcpm/tcpm.c</i><br>
><i> index ce7af398c7c1c1f..2f89bae29c0c297 100644</i><br>
><i> --- a/drivers/usb/typec/tcpm/tcpm.c</i><br>
><i> +++ b/drivers/usb/typec/tcpm/tcpm.c</i><br>
><i> @@ -1365,14 +1365,6 @@ static void tcpm_queue_vdm(struct tcpm_port *port, const u32 header,</i><br>
><i>  	mod_vdm_delayed_work(port, 0);</i><br>
><i>  }</i><br>
><i>  </i><br>
><i> -static void tcpm_queue_vdm_unlocked(struct tcpm_port *port, const u32 header,</i><br>
><i> -				    const u32 *data, int cnt)</i><br>
><i> -{</i><br>
><i> -	mutex_lock(&port->lock);</i><br>
><i> -	tcpm_queue_vdm(port, header, data, cnt);</i><br>
><i> -	mutex_unlock(&port->lock);</i><br>
><i> -}</i><br>
><i> -</i><br>
><i>  static void svdm_consume_identity(struct tcpm_port *port, const u32 *p, int cnt)</i><br>
><i>  {</i><br>
><i>  	u32 vdo = p[VDO_INDEX_IDH];</i><br>
><i> @@ -1705,8 +1697,6 @@ static void tcpm_handle_vdm_request(struct tcpm_port *port,</i><br>
><i>  	 *</i><br>
><i>  	 * And we also have this ordering:</i><br>
><i>  	 * 1. alt-mode driver takes the alt-mode's lock</i><br>
><i> -	 * 2. alt-mode driver calls tcpm_altmode_enter which takes the</i><br>
><i> -	 *    tcpm port lock</i><br>
><i>  	 *</i><br>
><i>  	 * Dropping our lock here avoids this.</i><br>
><i>  	 */</i><br>
><i> @@ -2060,56 +2050,6 @@ static int tcpm_validate_caps(struct tcpm_port *port, const u32 *pdo,</i><br>
><i>  	return 0;</i><br>
><i>  }</i><br>
><i>  </i><br>
><i> -static int tcpm_altmode_enter(struct typec_altmode *altmode, u32 *vdo)</i><br>
><i> -{</i><br>
><i> -	struct tcpm_port *port = typec_altmode_get_drvdata(altmode);</i><br>
><i> -	int svdm_version;</i><br>
><i> -	u32 header;</i><br>
><i> -</i><br>
><i> -	svdm_version = typec_get_negotiated_svdm_version(port->typec_port);</i><br>
><i> -	if (svdm_version < 0)</i><br>
><i> -		return svdm_version;</i><br>
><i> -</i><br>
><i> -	header = VDO(altmode->svid, vdo ? 2 : 1, svdm_version, CMD_ENTER_MODE);</i><br>
><i> -	header |= VDO_OPOS(altmode->mode);</i><br>
><i> -</i><br>
><i> -	tcpm_queue_vdm_unlocked(port, header, vdo, vdo ? 1 : 0);</i><br>
><i> -	return 0;</i><br>
><i> -}</i><br>
><i> -</i><br>
><i> -static int tcpm_altmode_exit(struct typec_altmode *altmode)</i><br>
><i> -{</i><br>
><i> -	struct tcpm_port *port = typec_altmode_get_drvdata(altmode);</i><br>
><i> -	int svdm_version;</i><br>
><i> -	u32 header;</i><br>
><i> -</i><br>
><i> -	svdm_version = typec_get_negotiated_svdm_version(port->typec_port);</i><br>
><i> -	if (svdm_version < 0)</i><br>
><i> -		return svdm_version;</i><br>
><i> -</i><br>
><i> -	header = VDO(altmode->svid, 1, svdm_version, CMD_EXIT_MODE);</i><br>
><i> -	header |= VDO_OPOS(altmode->mode);</i><br>
><i> -</i><br>
><i> -	tcpm_queue_vdm_unlocked(port, header, NULL, 0);</i><br>
><i> -	return 0;</i><br>
><i> -}</i><br>
><i> -</i><br>
><i> -static int tcpm_altmode_vdm(struct typec_altmode *altmode,</i><br>
><i> -			    u32 header, const u32 *data, int count)</i><br>
><i> -{</i><br>
><i> -	struct tcpm_port *port = typec_altmode_get_drvdata(altmode);</i><br>
><i> -</i><br>
><i> -	tcpm_queue_vdm_unlocked(port, header, data, count - 1);</i><br>
><i> -</i><br>
><i> -	return 0;</i><br>
><i> -}</i><br>
><i> -</i><br>
><i> -static const struct typec_altmode_ops tcpm_altmode_ops = {</i><br>
><i> -	.enter = tcpm_altmode_enter,</i><br>
><i> -	.exit = tcpm_altmode_exit,</i><br>
><i> -	.vdm = tcpm_altmode_vdm,</i><br>
><i> -};</i><br>
><i> -</i><br>
><i>  /*</i><br>
><i>   * PD (data, control) command handling functions</i><br>
><i>   */</i><br>
><i> -- </i><br>
><i> 1.8.3</i><br>
><i> </i><br>
<br>
-- <br>
heikki<br>
<br>
<br>

