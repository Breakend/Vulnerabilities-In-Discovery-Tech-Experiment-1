Flushing functions don't rely on preemption being disabled, so<br>
use kmap_local_page() instead of kmap_atomic().<br>
<br>
Signed-off-by: Christophe Leroy <christophe.leroy@xxxxxxxxxx><br>
---<br>
 arch/powerpc/mm/cacheflush.c | 19 ++++++++++---------<br>
 1 file changed, 10 insertions(+), 9 deletions(-)<br>
<br>
diff --git a/arch/powerpc/mm/cacheflush.c b/arch/powerpc/mm/cacheflush.c<br>
index d9eafa077c09..63363787e000 100644<br>
--- a/arch/powerpc/mm/cacheflush.c<br>
+++ b/arch/powerpc/mm/cacheflush.c<br>
@@ -152,16 +152,16 @@ static void flush_dcache_icache_hugepage(struct page *page)<br>
 {<br>
 	int i;<br>
 	int nr = compound_nr(page);<br>
-	void *start;<br>
 <br>
 	if (!PageHighMem(page)) {<br>
 		for (i = 0; i < nr; i++)<br>
 			__flush_dcache_icache(lowmem_page_address(page + i));<br>
 	} else {<br>
 		for (i = 0; i < nr; i++) {<br>
-			start = kmap_atomic(page+i);<br>
+			void *start = kmap_local_page(page + i);<br>
+<br>
 			__flush_dcache_icache(start);<br>
-			kunmap_atomic(start);<br>
+			kunmap_local(start);<br>
 		}<br>
 	}<br>
 }<br>
@@ -177,9 +177,10 @@ void flush_dcache_icache_page(struct page *page)<br>
 	if (!PageHighMem(page)) {<br>
 		__flush_dcache_icache(lowmem_page_address(page));<br>
 	} else if (IS_ENABLED(CONFIG_BOOKE) || sizeof(phys_addr_t) > sizeof(void *)) {<br>
-		void *start = kmap_atomic(page);<br>
+		void *start = kmap_local_page(page);<br>
+<br>
 		__flush_dcache_icache(start);<br>
-		kunmap_atomic(start);<br>
+		kunmap_local(start);<br>
 	} else {<br>
 		flush_dcache_icache_phys(page_to_phys(page));<br>
 	}<br>
@@ -225,9 +226,9 @@ void copy_user_page(void *vto, void *vfrom, unsigned long vaddr,<br>
 void flush_icache_user_page(struct vm_area_struct *vma, struct page *page,<br>
 			     unsigned long addr, int len)<br>
 {<br>
-	unsigned long maddr;<br>
+	void *maddr;<br>
 <br>
-	maddr = (unsigned long) kmap(page) + (addr & ~PAGE_MASK);<br>
-	flush_icache_range(maddr, maddr + len);<br>
-	kunmap(page);<br>
+	maddr = kmap_local_page(page) + (addr & ~PAGE_MASK);<br>
+	flush_icache_range((unsigned long)maddr, (unsigned long)maddr + len);<br>
+	kunmap_local(maddr);<br>
 }<br>
-- <br>
2.25.0<br>
<br>
<br>

