On Tue, Apr 06, 2021 at 05:36:01PM -0700, Song Liu wrote:<br>
><i> Currently, to use BPF to aggregate perf event counters, the user uses</i><br>
><i> --bpf-counters option. Enable "use bpf by default" events with a config</i><br>
><i> option, stat.bpf-counter-events. This is limited to hardware events in</i><br>
><i> evsel__hw_names.</i><br>
><i> </i><br>
><i> This also enables mixed BPF event and regular event in the same sesssion.</i><br>
><i> For example:</i><br>
><i> </i><br>
><i>    perf config stat.bpf-counter-events=instructions</i><br>
><i>    perf stat -e instructions,cs</i><br>
><i> </i><br>
<br>
so if we are mixing events now, how about uing modifier for bpf counters,<br>
instead of configuring .perfconfig list we could use:<br>
<br>
  perf stat -e instructions:b,cs<br>
<br>
thoughts?<br>
<br>
the change below adds 'b' modifier and sets 'evsel::bpf_counter',<br>
feel free to use it<br>
<br>
jirka<br>
<br>
<br>
---<br>
diff --git a/tools/perf/util/evsel.h b/tools/perf/util/evsel.h<br>
index ca52581f1b17..c55e4e58d1dc 100644<br>
--- a/tools/perf/util/evsel.h<br>
+++ b/tools/perf/util/evsel.h<br>
@@ -82,6 +82,7 @@ struct evsel {<br>
 		bool			auto_merge_stats;<br>
 		bool			collect_stat;<br>
 		bool			weak_group;<br>
+		bool			bpf_counter;<br>
 		int			bpf_fd;<br>
 		struct bpf_object	*bpf_obj;<br>
 	};<br>
diff --git a/tools/perf/util/parse-events.c b/tools/perf/util/parse-events.c<br>
index 9ecb45bea948..b5850f1ea90b 100644<br>
--- a/tools/perf/util/parse-events.c<br>
+++ b/tools/perf/util/parse-events.c<br>
@@ -1801,6 +1801,7 @@ struct event_modifier {<br>
 	int pinned;<br>
 	int weak;<br>
 	int exclusive;<br>
+	int bpf_counter;<br>
 };<br>
 <br>
 static int get_event_modifier(struct event_modifier *mod, char *str,<br>
@@ -1821,6 +1822,7 @@ static int get_event_modifier(struct event_modifier *mod, char *str,<br>
 	int exclude = eu | ek | eh;<br>
 	int exclude_GH = evsel ? evsel->exclude_GH : 0;<br>
 	int weak = 0;<br>
+	int bpf_counter = 0;<br>
 <br>
 	memset(mod, 0, sizeof(*mod));<br>
 <br>
@@ -1864,6 +1866,8 @@ static int get_event_modifier(struct event_modifier *mod, char *str,<br>
 			exclusive = 1;<br>
 		} else if (*str == 'W') {<br>
 			weak = 1;<br>
+		} else if (*str == 'b') {<br>
+			bpf_counter = 1;<br>
 		} else<br>
 			break;<br>
 <br>
@@ -1895,6 +1899,7 @@ static int get_event_modifier(struct event_modifier *mod, char *str,<br>
 	mod->sample_read = sample_read;<br>
 	mod->pinned = pinned;<br>
 	mod->weak = weak;<br>
+	mod->bpf_counter = bpf_counter;<br>
 	mod->exclusive = exclusive;<br>
 <br>
 	return 0;<br>
@@ -1909,7 +1914,7 @@ static int check_modifier(char *str)<br>
 	char *p = str;<br>
 <br>
 	/* The sizeof includes 0 byte as well. */<br>
-	if (strlen(str) > (sizeof("ukhGHpppPSDIWe") - 1))<br>
+	if (strlen(str) > (sizeof("ukhGHpppPSDIWeb") - 1))<br>
 		return -1;<br>
 <br>
 	while (*p) {<br>
@@ -1950,6 +1955,7 @@ int parse_events__modifier_event(struct list_head *list, char *str, bool add)<br>
 		evsel->sample_read         = mod.sample_read;<br>
 		evsel->precise_max         = mod.precise_max;<br>
 		evsel->weak_group	   = mod.weak;<br>
+		evsel->bpf_counter         = mod.bpf_counter;<br>
 <br>
 		if (evsel__is_group_leader(evsel)) {<br>
 			evsel->core.attr.pinned = mod.pinned;<br>
diff --git a/tools/perf/util/parse-events.l b/tools/perf/util/parse-events.l<br>
index 0b36285a9435..fb8646cc3e83 100644<br>
--- a/tools/perf/util/parse-events.l<br>
+++ b/tools/perf/util/parse-events.l<br>
@@ -210,7 +210,7 @@ name_tag	[\'][a-zA-Z_*?\[\]][a-zA-Z0-9_*?\-,\.\[\]:=]*[\']<br>
 name_minus	[a-zA-Z_*?][a-zA-Z0-9\-_*?.:]*<br>
 drv_cfg_term	[a-zA-Z0-9_\.]+(=[a-zA-Z0-9_*?\.:]+)?<br>
 /* If you add a modifier you need to update check_modifier() */<br>
-modifier_event	[ukhpPGHSDIWe]+<br>
+modifier_event	[ukhpPGHSDIWeb]+<br>
 modifier_bp	[rwx]{1,3}<br>
 <br>
 %%<br>
<br>
<br>

