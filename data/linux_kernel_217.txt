
Hi Arnd and all,<br>
<br>
Here's the final version of the M1 SoC bring-up series, based on<br>
v4 which was reviewed here:<br>
<br>
<a  rel="nofollow" href="https://lore.kernel.org/linux-arm-kernel/20210402090542.131194-1-marcan@xxxxxxxxx/T/#u">https://lore.kernel.org/linux-arm-kernel/20210402090542.131194-1-marcan@xxxxxxxxx/T/#u</a><br>
<br>
Changes since v4 as reviewed:<br>
<br>
* Sort DT soc bus nodes by address (NFC)<br>
* Introduce defines to better represent the meaning of hwirq IDs in<br>
  the AIC driver (NFC)<br>
* Update stale comments in AIC (NFC)<br>
* Make of_mmio_is_nonposted static and not exported (export change only)<br>
* Rewrite pci_remap_cfgspace() more succintly using ?: operator (NFC)<br>
* Update FIQ series merge to arm64/for-next/fiq<br>
* Remove the nVHE series (we will let this go through amd64 on its own)<br>
<br>
The public key that signed the tag is available here:<br>
<br>
<a  rel="nofollow" href="https://mrcn.st/pub">https://mrcn.st/pub</a><br>
<br>
Or pull e22a629a4c515dd5 from keys.gnupg.net or pgp.mit.edu.<br>
<br>
Cheers,<br>
Hector<br>
<br>
The following changes since commit 847bea3d08af9158ae9e17b43632d6aa4f1702a0:<br>
<br>
  Merge remote-tracking branch 'arm64/for-next/fiq' (2021-04-08 19:21:57 +0900)<br>
<br>
are available in the Git repository at:<br>
<br>
  <a  rel="nofollow" href="https://github.com/AsahiLinux/linux.git">https://github.com/AsahiLinux/linux.git</a> tags/m1-soc-bringup-v5<br>
<br>
for you to fetch changes up to 7d2d16ccf15d8eb84accfaf44a0b324f36e39588:<br>
<br>
  arm64: apple: Add initial Apple Mac mini (M1, 2020) devicetree (2021-04-08 20:18:41 +0900)<br>
<br>
----------------------------------------------------------------<br>
Apple M1 SoC platform bring-up<br>
<br>
This series brings up initial support for the Apple M1 SoC, used in the<br>
2020 Mac Mini, MacBook Pro, and MacBook Air models.<br>
<br>
The following features are supported in this initial port:<br>
<br>
- UART (samsung-style) with earlycon support<br>
- Interrupts, including affinity and IPIs (Apple Interrupt Controller)<br>
- SMP (through standard spin-table support)<br>
- simplefb-based framebuffer<br>
- Devicetree for the Mac Mini (should work for the others too at this<br>
  stage)<br>
<br>
== Merge notes ==<br>
<br>
This tag is based on v5.12-rc3 and includes the following two<br>
dependencies merged in:<br>
<br>
* Tip of arm64/for-next/fiq: 3889ba70102e<br>
  This is a hard (build) dependency that adds support for FIQ<br>
  interrupts, which is required for this SoC and the included AIC<br>
  irqchip driver. It is already merged in the arm64 tree.<br>
<br>
* From tty/tty-next: 71b25f4df984<br>
  This commit includes the Samsung UART changes that have already<br>
  been merged into the tty tree. It is nominally a soft dependency,<br>
  but if this series is merged first it would trigger devicetree<br>
  validation failures as the DT included in it depends on bindings<br>
  introduced in the tty tree.<br>
<br>
  There was a merge conflict here. It has been resolved the same<br>
  way gregkh resolved it in a later tty merge, and both tty-next<br>
  and torvalds/master merge cleanly with this series at this time.<br>
<br>
This series additionally depends on the nVHE changes in [1] to boot,<br>
but we are letting those get merged through arm64.<br>
<br>
[1] <a  rel="nofollow" href="https://lore.kernel.org/linux-arm-kernel/20210408131010.1109027-1-maz@xxxxxxxxxx/T/#u">https://lore.kernel.org/linux-arm-kernel/20210408131010.1109027-1-maz@xxxxxxxxxx/T/#u</a><br>
<br>
== Testing notes ==<br>
<br>
This has been tested on an Apple M1 Mac Mini booting to a framebuffer<br>
and serial console, with SMP and KASLR, with an arm64 defconfig<br>
(+ CONFIG_FB_SIMPLE for the fb). In addition, the AIC driver now<br>
supports running in EL1, tested in UP mode only.<br>
<br>
== About the hardware ==<br>
<br>
These machines officially support booting unsigned/user-provided<br>
XNU-like kernels, with a very different boot protocol and devicetree<br>
format. We are developing an initial bootloader, m1n1 [1], to take care<br>
of as many hardware peculiarities as possible and present a standard<br>
Linux arm64 boot protocol and device tree. In the future, I expect that<br>
production setups will add U-Boot and perhaps GRUB into the boot chain,<br>
to make the boot process similar to other ARM64 platforms.<br>
<br>
The machines expose their debug UART over USB Type C, triggered with<br>
vendor-specific USB-PD commands. Currently, the easiest way to get a<br>
serial console on these machines is to use a second M1 box and a simple<br>
USB C cable [2]. You can also build a DIY interface using an Arduino, a<br>
FUSB302 chip or board, and a 1.2V UART-TTL adapter [3]. In the coming<br>
weeks we will be designing an open hardware project to provide<br>
serial/debug connectivity to these machines (and, hopefully, also<br>
support other UART-over-Type C setups from other vendors). Please<br>
contact me privately if you are interested in getting an early prototype<br>
version of one of these devices.<br>
<br>
We also have WIP/not merged yet support for loading kernels and<br>
interacting via dwc3 usb-gadget, which works with a standard C-C or C-A<br>
cable and any Linux host.<br>
<br>
A quickstart guide to booting Linux kernels on these machines is<br>
available at [4], and we are documenting the hardware at [5].<br>
<br>
[1] <a  rel="nofollow" href="https://github.com/AsahiLinux/m1n1/">https://github.com/AsahiLinux/m1n1/</a><br>
[2] <a  rel="nofollow" href="https://github.com/AsahiLinux/macvdmtool/">https://github.com/AsahiLinux/macvdmtool/</a><br>
[3] <a  rel="nofollow" href="https://github.com/AsahiLinux/vdmtool/">https://github.com/AsahiLinux/vdmtool/</a><br>
[4] <a  rel="nofollow" href="https://github.com/AsahiLinux/docs/wiki/Developer-Quickstart">https://github.com/AsahiLinux/docs/wiki/Developer-Quickstart</a><br>
[5] <a  rel="nofollow" href="https://github.com/AsahiLinux/docs/wiki">https://github.com/AsahiLinux/docs/wiki</a><br>
<br>
== Project Blurb ==<br>
<br>
Asahi Linux is an open community project dedicated to developing and<br>
maintaining mainline support for Apple Silicon on Linux. Feel free to<br>
drop by #asahi and #asahi-dev on freenode to chat with us, or check<br>
our website for more information on the project:<br>
<br>
<a  rel="nofollow" href="https://asahilinux.org/">https://asahilinux.org/</a><br>
<br>
Signed-off-by: Hector Martin <marcan@xxxxxxxxx><br>
<br>
----------------------------------------------------------------<br>
Arnd Bergmann (1):<br>
      docs: driver-api: device-io: Document I/O access functions<br>
<br>
Hector Martin (17):<br>
      dt-bindings: vendor-prefixes: Add apple prefix<br>
      dt-bindings: arm: apple: Add bindings for Apple ARM platforms<br>
      dt-bindings: arm: cpus: Add apple,firestorm & icestorm compatibles<br>
      arm64: cputype: Add CPU implementor & types for the Apple M1 cores<br>
      dt-bindings: timer: arm,arch_timer: Add interrupt-names support<br>
      arm64: arch_timer: Implement support for interrupt-names<br>
      asm-generic/io.h:  Add a non-posted variant of ioremap()<br>
      docs: driver-api: device-io: Document ioremap() variants & access funcs<br>
      arm64: Implement ioremap_np() to map MMIO as nGnRnE<br>
      asm-generic/io.h: implement pci_remap_cfgspace using ioremap_np<br>
      of/address: Add infrastructure to declare MMIO as non-posted<br>
      arm64: Move ICH_ sysreg bits from arm-gic-v3.h to sysreg.h<br>
      dt-bindings: interrupt-controller: Add DT bindings for apple-aic<br>
      irqchip/apple-aic: Add support for the Apple Interrupt Controller<br>
      arm64: Kconfig: Introduce CONFIG_ARCH_APPLE<br>
      dt-bindings: display: Add apple,simple-framebuffer<br>
      arm64: apple: Add initial Apple Mac mini (M1, 2020) devicetree<br>
<br>
 Documentation/devicetree/bindings/arm/apple.yaml   |  64 ++<br>
 Documentation/devicetree/bindings/arm/cpus.yaml    |   2 +<br>
 .../bindings/display/simple-framebuffer.yaml       |   5 +<br>
 .../bindings/interrupt-controller/apple,aic.yaml   |  88 +++<br>
 .../devicetree/bindings/timer/arm,arch_timer.yaml  |  19 +<br>
 .../devicetree/bindings/vendor-prefixes.yaml       |   2 +<br>
 Documentation/driver-api/device-io.rst             | 356 +++++++++<br>
 Documentation/driver-api/driver-model/devres.rst   |   1 +<br>
 MAINTAINERS                                        |  14 +<br>
 arch/arm64/Kconfig.platforms                       |   7 +<br>
 arch/arm64/boot/dts/Makefile                       |   1 +<br>
 arch/arm64/boot/dts/apple/Makefile                 |   2 +<br>
 arch/arm64/boot/dts/apple/t8103-j274.dts           |  45 ++<br>
 arch/arm64/boot/dts/apple/t8103.dtsi               | 135 ++++<br>
 arch/arm64/configs/defconfig                       |   1 +<br>
 arch/arm64/include/asm/cputype.h                   |   6 +<br>
 arch/arm64/include/asm/io.h                        |  11 +-<br>
 arch/arm64/include/asm/sysreg.h                    |  60 ++<br>
 arch/sparc/include/asm/io_64.h                     |   4 +<br>
 drivers/clocksource/arm_arch_timer.c               |  24 +-<br>
 drivers/irqchip/Kconfig                            |   8 +<br>
 drivers/irqchip/Makefile                           |   1 +<br>
 drivers/irqchip/irq-apple-aic.c                    | 852 +++++++++++++++++++++<br>
 drivers/of/address.c                               |  43 +-<br>
 include/asm-generic/io.h                           |  22 +-<br>
 include/asm-generic/iomap.h                        |   9 +<br>
 include/clocksource/arm_arch_timer.h               |   1 +<br>
 .../dt-bindings/interrupt-controller/apple-aic.h   |  15 +<br>
 include/linux/cpuhotplug.h                         |   1 +<br>
 include/linux/io.h                                 |  18 +-<br>
 include/linux/ioport.h                             |   1 +<br>
 include/linux/irqchip/arm-gic-v3.h                 |  56 --<br>
 lib/devres.c                                       |  22 +<br>
 33 files changed, 1816 insertions(+), 80 deletions(-)<br>
 create mode 100644 Documentation/devicetree/bindings/arm/apple.yaml<br>
 create mode 100644 Documentation/devicetree/bindings/interrupt-controller/apple,aic.yaml<br>
 create mode 100644 arch/arm64/boot/dts/apple/Makefile<br>
 create mode 100644 arch/arm64/boot/dts/apple/t8103-j274.dts<br>
 create mode 100644 arch/arm64/boot/dts/apple/t8103.dtsi<br>
 create mode 100644 drivers/irqchip/irq-apple-aic.c<br>
 create mode 100644 include/dt-bindings/interrupt-controller/apple-aic.h<br>
<br>
<br>

